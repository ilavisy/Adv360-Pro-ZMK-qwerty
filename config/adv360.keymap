
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2  &kp N3    &kp N4  &kp N5               &mo 3                                                                  &tog 4  &kp N6    &kp N7     &kp N8    &kp N9         &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W   &kp F     &kp P   &kp B               &none                                                                   &none   &kp J     &kp L      &kp U     &kp Y  &kp SEMICOLON   &kp BSLH
   &kp ESC      &kp A     &kp R   &kp S     &kp T   &kp G              &tog 1  &kp LCTRL     &kp LALT                  &kp LGUI  &kp RCTRL      &none   &kp M     &kp N      &kp E     &kp I          &kp O    &kp SQT
 &kp LSHFT      &kp Z     &kp X   &kp C     &kp D   &kp V                                 &kp PAGE_UP                  &kp HOME                         &kp K     &kp H  &kp COMMA   &kp DOT       &kp FSLH  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp UP  &kp DOWN                    &kp BSPC    &kp DEL    &kp PG_DN                   &kp END  &kp ENTER  &kp SPACE          &kp LEFT  &kp RIGHT  &kp LBKT       &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2  &kp N3    &kp N4  &kp N5               &mo 3                                                                &trans  &kp N6  &kp KP_NUM  &kp KP_MULTIPLY  &kp KP_DOT     &kp KP_N0  &kp MINUS
   &kp TAB      &kp Q     &kp W   &kp F     &kp P   &kp B               &none                                                                 &none   &kp J   &kp KP_N7        &kp KP_N8   &kp KP_N9  &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp R   &kp S     &kp T   &kp G              &trans  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp M   &kp KP_N4        &kp KP_N5   &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X   &kp C     &kp D   &kp V                                 &kp HOME                  &kp PG_UP                         &kp K   &kp KP_N1        &kp KP_N2   &kp KP_N3  &kp KP_SLASH  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp UP  &kp DOWN                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE            &kp LEFT        &kp RIGHT    &kp LBKT      &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &mo 3                                                  &tog 4  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &tog 1  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                           &none   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Mouse {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                          &trans  &kp RG(F7)   &kp RG(F8)  &kp RG(F9)  &kp RG(F10)  &kp RG(F11)  &kp RG(F12)
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &kp RG(RS(F1))  &kp LG(F7)   &kp LG(F8)  &kp LG(F9)  &kp LG(F10)  &kp LG(F11)  &kp LG(F12)
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &kp LG(LS(F1))  &kp LG(F1)  &mt LWIN F2  &kp LG(F3)  &mt LWIN F4   &kp LG(F5)   &kp LG(F6)
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                          &kp RG(F1)   &kp RG(F2)  &kp RG(F3)   &kp RG(F4)   &kp RG(F5)   &kp RG(F6)
  &mo 2  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans          &trans                   &trans      &trans       &trans       &trans        &mo 2
            >;
        };

    };
};
